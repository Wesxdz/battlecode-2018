// Research Plan
// Getting a Facotry up and running
// Map Analysis, Best route, Enemies, Defense
// Rocket and Ship planning

Wrap Method can initialize to the length to avoid multiple resizings...
certain methods can take in the previous iteration? And that way we can we dont copy so many values..

We NEED to keep track of our team on a planet. Call bc_GameController_my_team will get us Every Unit on the other planet

Some methods do mutlipe things and by breaking them up or making them more generic we can reduce computation possibly.

Could we define enums as ints?

Keep track of factories being built

Modify shared pointers method to use int id as well.

Have general Waypoints for Exploration

Keep track of units through a map / dictionary.
We map the id with some value and can get that value from the id.
We only ever work on valid team though
After so long, we should check if a unit was used, and possibly remove it
Map to a Struct...?

Have some waay to delegate events?
For example, Can't replicate? Harvest/ Build

// Implement Direction Wrapper

Test if methods are faster by seperating their conditionals.
I.e. Garrision then direction rather than canUnload

Will probaly be faster to iterate over enemy visible units rather than attack area for ranger
Especially if used as group

Should try to group entitys by type and have them perform at the same time.
Entity decision should based off each other

